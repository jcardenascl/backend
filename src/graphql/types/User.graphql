type User {
  id: ID!
  firstName: String
  lastName: String
  username: String!
  email: String!
  password: String
  transactions: [Transaction]
}

type AuthPayload {
  token: String!
}

input UserInput {
  firstName: String
  lastName: String
  username: String!
  email: String!
  password: String!
}

input UpdateUserInput {
  firstName: String
  lastName: String
  username: String
  email: String
  password: String
}

input LoginInput {
  email: String!
  password: String!
}

type Query {
  "Get all users"
  users: [User]
}

type Mutation {
  "Create user"
  user(input: UserInput!): User
  "Login user"
  login(input: LoginInput): AuthPayload!
}
